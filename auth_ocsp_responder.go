/* 
 * BigIP iControl REST
 *
 * REST API for F5 BigIP. Only LTM is included, and most endpoints are untested.
 *
 * OpenAPI spec version: 12.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package f5api

type AuthOcspResponder struct {

	// Specifies whether the system verifies an OCSP response signature or the nonce values. The default value is enabled.
	Nonce string `json:"nonce,omitempty"`

	// The application service that the object belongs to.
	AppService string `json:"appService,omitempty"`

	// Adds a list of additional certificates to an OCSP request.
	SignOther string `json:"signOther,omitempty"`

	// Specifies the name of the file containing explicitly-trusted responder certificates. This parameter is needed in the event that the responder is not covered by the certificates already loaded into the responder's CA store.
	VaFile string `json:"vaFile,omitempty"`

	// User defined description.
	Description string `json:"description,omitempty"`

	// Specifies whether the system constructs a chain from certificates in the OCSP response. The default value is enabled.
	Chain string `json:"chain,omitempty"`

	// Instructs the BIG-IP local traffic management system to trust the certificates specified with the verify-other option. The default value is disabled.
	TrustOther string `json:"trustOther,omitempty"`

	// Specifies a certificate used to sign an OCSP request. If the certificate is specified but the key is not specified, then the private key is read from the same file as the certificate. If neither the certificate nor the key is specified, then the request is not signed. If the certificate is not specified and the key is specified, then the configuration is considered to be invalid.
	Signer string `json:"signer,omitempty"`

	// Specifies whether the system ignores certificates contained in an OCSP response when searching for the signer's certificate. To use this setting, the signer's certificate must be specified with either the verify-other or va-file option. The default value is enabled.
	Intern string `json:"intern,omitempty"`

	// Enables or disables verification of an OCSP response certificate. Use this option for debugging purposes only. The default value is enabled.
	CheckCerts string `json:"checkCerts,omitempty"`

	// Name of entity
	Name string `json:"name,omitempty"`

	// Enables or disables verification of an OCSP response signature or the nonce values. Used for debugging purposes only. The default value is enabled.
	Verify string `json:"verify,omitempty"`

	// Kind of entity
	Kind string `json:"kind,omitempty"`

	// Specifies that the system makes additional checks to see if the signer's certificate is authorized to provide the necessary status information. Use this option for testing purposes only. The default value is enabled.
	VerifyCert string `json:"verifyCert,omitempty"`

	// Specifies the name of the file used to search for an OCSP response signing certificate when the certificate has been omitted from the response.
	VerifyOther string `json:"verifyOther,omitempty"`

	// Specifies the passphrase that the system uses to encrypt the sign key.  The default value is none.
	SignKeyPassPhrase string `json:"signKeyPassPhrase,omitempty"`

	// Specifies whether the system ignores the URL contained in the certificate's AIA fields, and always uses the URL specified by the responder instead. The default value is disabled.
	IgnoreAia string `json:"ignoreAia,omitempty"`

	// Specifies a specific algorithm identifier, either sha1 or md5. sha1 is newer and provides more security with a 160 bit hash length. md5 is older and has only a 128 bit hash length. The default values is sha1. The cert ID is part of the OCSP protocol. The OCSP client (in this case, the BIG-IP system) calculates the cert ID using a hash of the Issuer and serial number for the certificate that it is trying to verify.
	CertIdDigest string `json:"certIdDigest,omitempty"`

	// Displays the partition within which the server resides.
	Partition string `json:"partition,omitempty"`

	// Specifies that the BIG-IP local traffic management system explicitly trusts that the OCSP response signer's certificate is authorized for OCSP response signing. If the signer's certificate does not contain the OCSP signing extension, specification of this option causes a response to be untrusted. The default value is enabled.
	Explicit string `json:"explicit,omitempty"`

	// Specifies the key that the system uses to sign an OCSP request. The default value is none.
	SignKey string `json:"signKey,omitempty"`

	// Specifies the URL used to contact the OCSP service on the responder. When using the ocsp responder command, you must specify a URL.
	Url string `json:"url,omitempty"`

	// Specifies the name of the path containing trusted CA certificates used to verify the signature on the OCSP response.
	CaPath string `json:"caPath,omitempty"`

	// Specifies the age of the status of the OCSP responder. The default value is 0 (zero).
	StatusAge int64 `json:"statusAge,omitempty"`

	// Specifies that the system checks the signature on the OCSP response. Use this option for testing purposes only. The default value is enabled.
	VerifySig string `json:"verifySig,omitempty"`

	// Specifies the algorithm for signing the request, using the signing certificate and key. This parameter has no meaning if request signing is not in effect (that is, both the request signing certificate and request signing key parameters are empty). This parameter is required only when request signing is in effect. The default value is sha1.
	SignDigest string `json:"signDigest,omitempty"`

	// Specifies the name of the file containing trusted CA certificates used to verify the signature on the OCSP response.
	CaFile string `json:"caFile,omitempty"`

	// Enables or disables the addition of certificates to an OCSP request. The default value is enabled.
	AllowCerts string `json:"allowCerts,omitempty"`

	// Specifies the number of seconds used to specify an acceptable error range. This option is used when the OCSP responder clock and a client clock are not synchronized, which could cause a certificate status check to fail. This value must be a positive number. The default value is 300 seconds.
	ValidityPeriod int64 `json:"validityPeriod,omitempty"`
}
