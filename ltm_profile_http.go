/*
 * BigIP iControl REST
 *
 * REST API for F5 BigIP. List of operations is not complete, nor known to be accurate.
 *
 * OpenAPI spec version: 12.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package f5api

// This describes a message sent to or received from some operations
type LtmProfileHttp struct {

	// The application service to which the object belongs.
	AppService string `json:"appService,omitempty"`

	// Specifies the type of HTTP proxy.
	ProxyType string `json:"proxyType,omitempty"`

	// Displays the administrative partition within which this profile resides.
	Partition string `json:"partition,omitempty"`

	// Specifies a quoted header string that you want to insert into an HTTP request. You can also specify none. The HTTP header being inserted can include a client IP address. Including a client IP address in an HTTP header is useful when a connection goes through a secure network address translation (SNAT) and you need to preserve the original client IP address. When you assign the configured HTTP profile to a virtual server, the system then inserts the header specified by the profile into any HTTP request that the system sends to a pool or pool member.
	HeaderInsert string `json:"headerInsert,omitempty"`

	// User defined description.
	Description string `json:"description,omitempty"`

	// Specifies whether to append, remove, or preserve a Via header in an HTTP request.
	ViaRequest string `json:"viaRequest,omitempty"`

	// Specifies the header string that you want to erase from an HTTP request. You can also specify none.
	HeaderErase string `json:"headerErase,omitempty"`

	// Specifies a quoted string for the basic authentication realm. The system sends this string to a client whenever authorization fails. The default value is none.
	BasicAuthRealm string `json:"basicAuthRealm,omitempty"`

	// Specifies one or more three-digit status codes that can be returned by an HTTP server.
	FallbackStatusCodes string `json:"fallbackStatusCodes,omitempty"`

	// When using connection pooling, which allows clients to make use of other client requests' server-side connections, you can insert the X-Forwarded-For header and specify a client IP address.
	InsertXforwardedFor string `json:"insertXforwardedFor,omitempty"`

	// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
	DefaultsFrom string `json:"defaultsFrom,omitempty"`

	// Enables the system to perform HTTP header transformations for the purpose of keeping server-side connections open. This feature requires configuration of a OneConnect profile.
	OneconnectTransformations string `json:"oneconnectTransformations,omitempty"`

	// Specifies a passphrase for the cookie encryption.
	EncryptCookieSecret string `json:"encryptCookieSecret,omitempty"`

	// Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist.
	AcceptXff string `json:"acceptXff,omitempty"`

	// Name of entity
	Name string `json:"name,omitempty"`

	// Kind of entity
	Kind string `json:"kind,omitempty"`

	// Specifies the value of the Server header in responses that the BIG-IP itself generates. The default is \"BigIP\". If no string is specified, then no Server header will be added to such responses.
	ServerAgentName string `json:"serverAgentName,omitempty"`

	// Specifies the maximum number of columns allowed for a header that is inserted into an HTTP request.
	LwsWidth int64 `json:"lwsWidth,omitempty"`

	// Specifies the hostname to include into Via header.
	ViaHostName string `json:"viaHostName,omitempty"`

	// Specifies which of the application HTTP redirects the system rewrites to HTTPS. Use this feature when the application is generating HTTP redirects that send the client to HTTP (a non-secure channel) when you want the client to continue accessing the application using HTTPS (a secure channel). This is a common occurrence when using client-side SSL processing on a BIG-IP system.
	RedirectRewrite string `json:"redirectRewrite,omitempty"`

	// Specifies how to handle chunked and unchunked responses.
	ResponseChunking string `json:"responseChunking,omitempty"`

	// Specifies how to handle chunked and unchunked requests.
	RequestChunking string `json:"requestChunking,omitempty"`

	// Specifies alternative XFF headers instead of the default X-forwarded-for header.
	XffAlternativeNames string `json:"xffAlternativeNames,omitempty"`

	// Encrypts specified cookies that the BIG-IP system sends to a client system.
	EncryptCookies string `json:"encryptCookies,omitempty"`

	// Specifies the linear white space separator that the system should use between HTTP headers when a header exceeds the maximum width specified by the lws width setting.
	LwsSeparator string `json:"lwsSeparator,omitempty"`

	// Specifies headers that the BIG-IP system allows in an HTTP response.
	ResponseHeadersPermitted string `json:"responseHeadersPermitted,omitempty"`

	// Specifies an HTTP fallback host. HTTP redirection allows you to redirect HTTP traffic to another protocol identifier, host name, port number, or URI path. For example, if all members of the targeted pool are unavailable (that is, the members are disabled, marked as down, or have exceeded their connection limit), the system can redirect the HTTP request to the fallback host, with the HTTP reply Status Code 302 Found.
	FallbackHost string `json:"fallbackHost,omitempty"`

	// Specifies whether to append, remove, or preserve a Via header in an HTTP response.
	ViaResponse string `json:"viaResponse,omitempty"`
}
