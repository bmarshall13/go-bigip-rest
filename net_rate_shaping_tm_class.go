/*
 * BigIP iControl REST
 *
 * REST API for F5 BigIP. List of operations is not complete, nor known to be accurate.
 *
 * OpenAPI spec version: 12.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package f5api

// This describes a message sent to or received from some operations
type NetRateShapingTmClass struct {

	// The application service that the object belongs to.
	AppService string `json:"appService,omitempty"`

	// Specifies the direction of traffic to which this class is applied. The default value is any.
	Direction string `json:"direction,omitempty"`

	// User defined description.
	Description string `json:"description,omitempty"`

	// Specifies the class from which this class can borrow any unused bandwidth, thereby supplementing the burst size of this class. Note that borrowing bandwidth affects the value of the rate, ceiling, and queue options.
	Parent string `json:"parent,omitempty"`

	// Specifies the percentage of the maximum throughput rate specified for the parent-class that is available for this class. The default value is 0.
	RatePercentage float32 `json:"ratePercentage,omitempty"`

	// If you use the parent-class option to associate another class with this class, you can use this option to specify the percentage of the value of the ceiling option of the parent class that is available for this class. The default value is 0 (zero).
	CeilingPercentage float32 `json:"ceilingPercentage,omitempty"`

	// Specifies (in bps) how far beyond the value of the rate option that traffic is allowed to flow. This number sets an absolute limit. No traffic can exceed this rate. The rate class might limit traffic throughput to the value of the rate option when there is high contention among siblings of a parent-child class hierarchy. The default value is the value of the rate option. The minimum value is 296 bps.
	Ceiling float32 `json:"ceiling,omitempty"`

	// Specifies the name of a shaping policy. Note that the system automatically changes the drop-policy and queue options of this class to match the values in the specified shaping-policy. The default value is none.
	ShapingPolicy string `json:"shapingPolicy,omitempty"`

	// Specifies the queuing method. The two pre-configured options are sfq and pfifo. Stochastic Fair Queuing (sfq) is a queuing method that queues traffic under a set of many lists, choosing the specific list based on a hash of the connection information. This results in traffic from the same connection always being queued in the same list. SFQ then dequeues traffic from the set of the lists in a round-robin fashion. The overall effect is that fairness of dequeuing is achieved because one connection cannot control the queue at the exclusion of another. If the rate class has a parent class, the default queuing discipline is that of the parent class. If the rate class has no parent class, the default value is sfq. You can create a custom queuing method using the queue command. The Priority FIFO (pfifo) queuing method queues all traffic under a set of five lists based on the Type of Service (ToS) field of the traffic. Four of the lists correspond to the four possible ToS values (Minimum delay, Maximum throughput, Maximum reliability, and Minimum cost). The fifth list represents traffic with no ToS value. The Priority FIFO method processes these five lists in a way that preserves the meaning of the ToS field as much as possible. For example, a packet with the ToS field set to Minimum cost might yield dequeuing to a packet with the ToS field set to Minimum delay.
	Queue string `json:"queue,omitempty"`

	// Specifies the throughput rate allowed for traffic handled by this class. This option is required. The minimum value is 1bps.
	Rate float32 `json:"rate,omitempty"`

	// Specifies a drop-policy for this class. You can use one of the pre-configured drop policies, or you can create a customized drop-policy using the drop-policy component. The available preconfigured policies are red (randomly drops packets) and fred (drops packets according to the type of traffic in the flow). The default value is tail (drops the end of the traffic stream). Note that if you specify a value for the shaping-policy option of this class, the drop-policy specified in the specified shaping-policy option takes precedence and changes this value to conform.
	DropPolicy string `json:"dropPolicy,omitempty"`

	// Specifies the maximum number of bytes that traffic is allowed to burst beyond the value of the rate option. The default value is 0 (zero). Note that the traffic may not burst above the value of the ceiling option.
	MaxBurst int64 `json:"maxBurst,omitempty"`

	// Kind of entity
	Kind string `json:"kind,omitempty"`

	// Name of entity
	Name string `json:"name,omitempty"`
}
