/*
 * BigIP iControl REST
 *
 * REST API for F5 BigIP. List of operations is not complete, nor known to be accurate.
 *
 * OpenAPI spec version: 12.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package f5api

// This describes a message sent to or received from some operations
type LtmProfileOcspStaplingParams struct {
	AppService string `json:"appService,omitempty"`

	// Specifies the passphrase of the key used for signing the OCSP request.
	SignerKeyPassphrase string `json:"signerKeyPassphrase,omitempty"`

	// User defined description.
	Description string `json:"description,omitempty"`

	// Specifies the DNS resolver object used for fetching the OCSP response.
	DnsResolver string `json:"dnsResolver,omitempty"`

	// If enabled, the responder's certificate is checked for OCSP signingextension. By default, it is disabled.
	StrictRespCertCheck string `json:"strictRespCertCheck,omitempty"`

	// Specifies the lifetime of the OCSP response in the cache, in seconds.The actual time period for which the response is cached is the minimum of the response validity period and the cache-timeout. The default value is indefinite, indicating that the response validity period takes precedence.
	CacheTimeout string `json:"cacheTimeout,omitempty"`

	// Specifies the tolerable maximum absolute difference in the clocks of  the responder and the BIG-IP, in seconds. The default value is 300.
	ClockSkew int64 `json:"clockSkew,omitempty"`

	// Specifies the hash algorithm used for signing the OCSP request.The default value is SHA256.
	SignHash string `json:"signHash,omitempty"`

	// Specifies the proxy server pool used for fetching the OCSP response.
	ProxyServerPool string `json:"proxyServerPool,omitempty"`

	// Specifies whether the proxy server pool or the DNS resolver should be used for making the connection to the OCSP responder.
	UseProxyServer string `json:"useProxyServer,omitempty"`

	// Specifies the absolute URL that overrides the OCSP responder URL obtained from the certificate's AIA extension(s). This should be a HTTP or HTTPS based URL.
	ResponderUrl string `json:"responderUrl,omitempty"`

	// Kind of entity
	Kind string `json:"kind,omitempty"`

	// Name of entity
	Name string `json:"name,omitempty"`

	Partition string `json:"partition,omitempty"`

	// Specifies the lifetime of an error response in the cache, in seconds.The default value is 3600 or one hour.
	CacheErrorTimeout int64 `json:"cacheErrorTimeout,omitempty"`

	// Specifies the time interval (in seconds) that the BIG-IP waits for before aborting the connection to the OCSP responder. The default value is 8. The timeout should be less than the handshake timeout of the clientssl profile that the OCSP Stapling Parameters object is associated with.
	Timeout int64 `json:"timeout,omitempty"`

	// Specifies the certificate-authority that signs the responder's certificate.
	TrustedCa string `json:"trustedCa,omitempty"`

	// Specifies the certificate corresponding to the key used for signing the OCSP request.
	SignerCert string `json:"signerCert,omitempty"`

	// Specifies the maximum allowed lag time for the 'thisUpdate' time in the OCSP response that the BIG-IP accepts. If this maximum is exceeded, the response is dropped. If this value is set to '0', this validation is skipped. The default value is 86400 seconds.
	StatusAge int64 `json:"statusAge,omitempty"`

	// Specifies the key used for signing the OCSP request.
	SignerKey string `json:"signerKey,omitempty"`

	// Specifies the certificate(s) used for validating the OCSP response when the responder's certificate has been omitted from the response.
	TrustedResponders string `json:"trustedResponders,omitempty"`
}
