/* 
 * BigIP iControl REST
 *
 * REST API for F5 BigIP. Only LTM is included, and most endpoints are untested.
 *
 * OpenAPI spec version: 12.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package f5api

type MonitorUdp struct {

	// The application service to which the object belongs.
	AppService string `json:"appService,omitempty"`

	// Specifies the size of the sliding window, in seconds, which records probe history.  For example, if this value is 300, then a sliding window of the last five minutes' probe history will be used for calculating probe mean latency.
	AdaptiveSamplingTimespan int64 `json:"adaptiveSamplingTimespan,omitempty"`

	// Specifies the IP address and service port of the resource that is the destination of this monitor. Possible values are: *:* (Specifies to perform a health check on the IP address and port supplied by a pool member), *:port (Specifies to perform a health check on the server with the IP address supplied by the pool member and the port you specify.),   IP : port  (Specifies to mark a pool member up or down based on the response of the server at the IP address and port you specify.), and  IP : port   (with the transparent option enabled) (Specifies to perform a health check on the server at the IP address and port that you specify, route the check through the IP address and port supplied by the pool member, and mark the pool member (the gateway) up or down accordingly.).
	Destination string `json:"destination,omitempty"`

	// User defined description.
	Description string `json:"description,omitempty"`

	// Specifies how often in seconds that the system issues the monitor check when the node is up. The default value is the same as the (down) interval.
	UpInterval int64 `json:"upInterval,omitempty"`

	// Specifies whether the system automatically changes the status of a resource to enabled at the next successful monitor check. The default value is disabled. If you set this option to enabled, you must manually re-enable the resource before the system can use it for load balancing connections.
	ManualResume string `json:"manualResume,omitempty"`

	// Specifies how far from mean latency each monitor probe is allowed to be.  If adaptive-divergence-type is relative, this value is a percentage deviation from mean (e.g. 50 would indicate the probe is allowed to exceed the mean latency by 50%.)  If adaptive-divergence-type is absolute, this value is an offset from mean in milliseconds (e.g. 250 would indicate the probe is allowed allowed to exceed the mean latency by 250 ms.)
	AdaptiveDivergenceValue int64 `json:"adaptiveDivergenceValue,omitempty"`

	// Specifies the frequency at which the system issues the monitor check. The default value is 5 seconds.
	Interval int64 `json:"interval,omitempty"`

	// Specifies the existing monitor from which the system imports settings for the new monitor.
	DefaultsFrom string `json:"defaultsFrom,omitempty"`

	// Specifies the hard limit, in milliseconds, which the probe is not allowed to exceed, regardless of the divergence value.  For example, if this value is 500, then the probe latency may not exceed 500 ms even if that would still fall within the divergence value.
	AdaptiveLimit int64 `json:"adaptiveLimit,omitempty"`

	// Specifies the text string that the monitor looks for in the returned response.  The default value is none. If you do not specify a value for both the send and recv options, the monitor performs a simple service check and connect only.
	Recv string `json:"recv,omitempty"`

	// Specifies whether the monitor operates in transparent mode. Monitors in transparent mode can monitor pool members through firewalls. The default value is disabled.
	Transparent string `json:"transparent,omitempty"`

	// Specifies whether the monitor operates in reverse mode. When the monitor is in reverse mode, a successful check marks the monitored object down instead of up. You can use the Reverse mode only if you configure both the options send and recv. The default value is no. The no option specifies that the monitor does not operate in reverse mode. The yes option specifies that the monitor operates in reverse mode.
	Reverse string `json:"reverse,omitempty"`

	// Kind of entity
	Kind string `json:"kind,omitempty"`

	// Name of entity
	Name string `json:"name,omitempty"`

	// Specifies whether the adaptive-divergence-value is relative or absolute.
	AdaptiveDivergenceType string `json:"adaptiveDivergenceType,omitempty"`

	// Displays the administrative partition within which the monitor resides.
	Partition string `json:"partition,omitempty"`

	// Specifies the text string that the monitor sends to the target object. The default setting is 'default send string'.
	Send string `json:"send,omitempty"`

	// Specifies the amount of time in seconds after the first successful response before a node will be marked up.  A value of 0 will cause a node to be marked up immediately after a valid  response is received from the node. The default setting is 0.
	TimeUntilUp int64 `json:"timeUntilUp,omitempty"`

	// Specifies the number of seconds in which to wait for an ICMP error message. If an ICMP error message is received the node is marked down. If the timeout interval expires and no ICMP packet has been received the node is marked up. The default value is 16 seconds.
	Timeout int64 `json:"timeout,omitempty"`

	// Specifies a text string that the monitor looks for in the returned response. If the text string matches a string in the returned response, the corresponding pool member or node is marked session disabled.
	RecvDisable string `json:"recvDisable,omitempty"`

	// Specifies whether the monitor sends error messages and additional information to a log file created and labeled specifically for this monitor. The default setting is no. You can use the log information to help diagnose and troubleshoot unsuccessful health checks. The options are 'no' (specifies that the system does not redirect error messages and additional information related to this monitor to the log file) and 'yes' (specifies that the system redirects error messages and additional information to the /var/log/monitors/ monitor_name - node_name - port .log file).
	Debug string `json:"debug,omitempty"`

	// Specifies whether the adaptive feature is enabled for this monitor.  Not all monitors support the adaptive feature.
	Adaptive string `json:"adaptive,omitempty"`
}
