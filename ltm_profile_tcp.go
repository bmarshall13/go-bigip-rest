/*
 * BigIP iControl REST
 *
 * REST API for F5 BigIP. List of operations is not complete, nor known to be accurate.
 *
 * OpenAPI spec version: 12.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package f5api

// This describes a message sent to or received from some operations
type LtmProfileTcp struct {

	// Specifies, when enabled, that the system defers allocation of the connection chain context until the client response is received. This option is useful for dealing with 3-way handshake DOS attacks. The default value is disabled.
	DeferredAccept string `json:"deferredAccept,omitempty"`

	// Specifies the timeout in milliseconds for terminating a connection with an effective zero length TCP transmit window. The timeout starts when the peer advertises a zero length TCP window or when enough data has been sent to fill the previously advertised window. The timer is canceled when a non-zero length window is received. The default is 20000 milliseconds.
	ZeroWindowTimeout int64 `json:"zeroWindowTimeout,omitempty"`

	// When enabled, no DSS option is sent on the JOIN ACK.
	MptcpNojoindssack string `json:"mptcpNojoindssack,omitempty"`

	// Specifies the algorithm to use to share network resources among competing users to reduce congestion. The default value is high-speed.
	CongestionControl string `json:"congestionControl,omitempty"`

	// Specifies the initial congestion window size for connections to this destination. The actual window size is this value multiplied by the MSS (Maximal Segment Size) for the same connection. The default value is 0 (zero), which means to use the values specified in RFC2414. The range is from 0 to 16.
	InitCwnd int64 `json:"initCwnd,omitempty"`

	// Specifies the number of RTOs before declaring subflow dead. The default value is 5. The range is from 1 to 12.
	MptcpRtomax int64 `json:"mptcpRtomax,omitempty"`

	// Specifies the maximum number of retransmissions of SYN segments that the system allows. The default value is 3.
	SynMaxRetrans int64 `json:"synMaxRetrans,omitempty"`

	// Specifies, when enabled, that the system uses a cache for storing congestion metrics. The default value is enabled.
	CmetricsCache string `json:"cmetricsCache,omitempty"`

	// When enabled, permit after break functionality, allowing for long-lived MPTCP sessions.
	MptcpMakeafterbreak string `json:"mptcpMakeafterbreak,omitempty"`

	// Specifies the size of the receive window, in bytes. The default value is 65535 bytes.
	ReceiveWindowSize int64 `json:"receiveWindowSize,omitempty"`

	// Specifies the minimum TCP retransmission timeout in milliseconds. The default value is 0 milliseconds; which means using the TCP stack default.
	MinimumRto int64 `json:"minimumRto,omitempty"`

	// Specifies the Quality of Service level that the system assigns to TCP packets when sending them to clients. The default value is 0 (zero).
	LinkQosToClient string `json:"linkQosToClient,omitempty"`

	// Specifies the threshold of packets lost per million at which the system should perform congestion control. Valid values for n are 0 to 1,000,000. The default is 0, meaning the system should perform congestion control if any packet loss occurs. If you set the ignore rate to 10 and packet loss for a TCP connection is greater than 10 per million, congestion control occurs.
	PktLossIgnoreRate int64 `json:"pktLossIgnoreRate,omitempty"`

	// If not 0, the maximum rate in bytes per second that TCP connections will be paced to.
	RatePaceMaxRate int64 `json:"ratePaceMaxRate,omitempty"`

	// Specifies the number of seconds that a connection is in the FIN-WAIT-1 or closing state before quitting. The default value is 5 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state). You can also specify immediate or indefinite.
	FinWaitTimeout int64 `json:"finWaitTimeout,omitempty"`

	// Specifies the lowest level at which the receive window is closed. The default value is 4096.
	ProxyBufferLow int64 `json:"proxyBufferLow,omitempty"`

	// Specifies the maximum number of subflows for a single flow. The range is 0 to 60 where 0 = unlimited.
	MptcpSubflowmax int64 `json:"mptcpSubflowmax,omitempty"`

	// Kind of entity
	Kind string `json:"kind,omitempty"`

	// Specifies the option numbers that will be accessible from iRules (TCP::option) for the flow. The format of each entry should be, \"{ option number   first|last } { option number   first|last }\". The keyword \"first\" means the system records the option the first time it is occurs (after and including the ACK of the three way handshake), while \"last\" means the system updates the available value every time it occurs.
	TcpOptions string `json:"tcpOptions,omitempty"`

	// Name of entity
	Name string `json:"name,omitempty"`

	// Specifies the maximum number of simultaneous join attempts on a given flow. The default value is 5. The range is from 1 to 20.
	MptcpJoinMax int64 `json:"mptcpJoinMax,omitempty"`

	// Specifies the number of seconds that a connection is in the FIN-WAIT-2 state before quitting. The default value is 300 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state).
	FinWait2Timeout int64 `json:"finWait_2Timeout,omitempty"`

	// Specifies, when enabled, that the system negotiates RFC2018-compliant Selective Acknowledgments with peers. The default value is enabled.
	SelectiveAcks string `json:"selectiveAcks,omitempty"`

	// Specifies the Type of Service level that the traffic management system assigns to TCP packets when sending them to clients.
	IpTosToClient string `json:"ipTosToClient,omitempty"`

	// Specifies whether to reset connections on timeout. The default value is enabled.
	ResetOnTimeout string `json:"resetOnTimeout,omitempty"`

	// When enabled, permits FAST join, allowing data to be sent on the MP_JOIN SYN, which can allow a server response to occur in parallel with the join.
	MptcpFastjoin string `json:"mptcpFastjoin,omitempty"`

	// Specifies the initial RTO (Retransmission TimeOut) base multiplier for SYN retransmission, in milliseconds. This value is modified by the exponential backoff table to select the interval for subsequent retransmissions. The default value is 0 (zero).
	SynRtoBase int64 `json:"synRtoBase,omitempty"`

	// When enabled, permits TCP Fast Open, allowing properly equipped TCP clients to send data with the SYN packet.
	FastOpen string `json:"fastOpen,omitempty"`

	// When enabled all incoming flows are handled by the MPTCP stack, allowing for support of multipath-enabled connections.
	Mptcp string `json:"mptcp,omitempty"`

	// Specifies the number of seconds that a connection is idle before the connection is eligible for deletion. The default value is 300 seconds.
	IdleTimeout int64 `json:"idleTimeout,omitempty"`

	// Specifies the probability of performing congestion control when multiple packets in a row are lost even if the pkt-loss-ignore-rate was not exceeded. Valid values are 0 to 32. The default is 0, meaning that the system should perform congestion control if any packets are lost.  Higher values decrease the chance of performing congestion control.
	PktLossIgnoreBurst int64 `json:"pktLossIgnoreBurst,omitempty"`

	// When enabled, the traffic management system allows coalescing of multiple ACK responses. The default value is enabled.
	DelayedAcks string `json:"delayedAcks,omitempty"`

	// Seconds for which a Fast Open Cookie provided by the BIG-IP is valid for incoming SYN packets. The default value is 21,600 seconds (6 hours). The range is from 0 (meaning use the default) to 1000000.
	FastOpenCookieExpiration int64 `json:"fastOpenCookieExpiration,omitempty"`

	// When enabled, specifies that the system uses limited transmit recovery revisions for fast retransmits (as specified in RFC 3042) to reduce the recovery time for connections on a lossy network. The default value is enabled.
	LimitedTransmit string `json:"limitedTransmit,omitempty"`

	// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
	DefaultsFrom string `json:"defaultsFrom,omitempty"`

	// Number of seconds without traffic before a MPTCP connection is eligible for deletion. The range is from 1 to 2147483647 and the default is 300.
	MptcpIdleTimeout int64 `json:"mptcpIdleTimeout,omitempty"`

	// When enabled, specifies that the system uses early fast retransmits (as specified in RFC 5827) to reduce the recovery time for connections that are receive-buffer or user-data limited. The default value is disabled.
	EarlyRetransmit string `json:"earlyRetransmit,omitempty"`

	// When enabled, the system will rate pace TCP data transmission.
	RatePace string `json:"ratePace,omitempty"`

	// Specifies whether the system uses an estimate of queuing delay as a measure of congestion, in addition to the normal loss-based control, to control the amount of data sent. The default is disabled.
	DelayWindowControl string `json:"delayWindowControl,omitempty"`

	// When enabled, increases the congestion window by basing the increase amount on the number of previously unacknowledged bytes that each ACK covers. The default value is enabled.
	Abc string `json:"abc,omitempty"`

	// Specifies whether the system recycles the connection when a SYN packet is received in a TIME-WAIT state. The default value is enabled.
	TimeWaitRecycle string `json:"timeWaitRecycle,omitempty"`

	// Specifies whether Selective Negative Acknowledgment is enabled or not. The default value is disabled.
	SelectiveNack string `json:"selectiveNack,omitempty"`

	// Specifies the minimum value of the retransmission timer for these MPTCP flows. The default value is 1000 msec. The range is from 200 to 5000 msec.
	MptcpRxmitmin int64 `json:"mptcpRxmitmin,omitempty"`

	// When enabled, specifies the use of the Selective ACKs (SACK) option to acknowledge duplicate segments. The default value is disabled.
	Dsack string `json:"dsack,omitempty"`

	// When enabled, specifies that the system uses tail loss probe to reduce the number of retransmission timeouts. The default value is disabled.
	TailLossProbe string `json:"tailLossProbe,omitempty"`

	// Specifies, when enabled, that the system uses the timestamps extension for TCP (as specified in RFC 1323) to enhance high-speed network performance. The default value is enabled.
	Timestamps string `json:"timestamps,omitempty"`

	// Specifies, when enabled, that the system applies Nagle's algorithm to reduce the number of short segments on the network. The default value is disabled. Note that for interactive protocols such as Telnet, rlogin, or SSH, F5 recommends disabling this setting on high-latency networks, to improve application responsiveness. When auto, the use of Nagle's algorithm is decided based on network conditions.
	Nagle string `json:"nagle,omitempty"`

	// Specifies, when enabled, that the system uses larger initial window sizes (as specified in RFC 3390) to help reduce round trip times. The default value is enabled.
	SlowStart string `json:"slowStart,omitempty"`

	// Specifies the initial receive window size for connections to this destination. The actual window size is this value multiplied by the MSS (Maximal Segment Size) for the same connection. The default value is 0 (zero), which means to use the Slow Start value.
	InitRwnd int64 `json:"initRwnd,omitempty"`

	// The application service to which the object belongs.
	AppService string `json:"appService,omitempty"`

	// User defined description.
	Description string `json:"description,omitempty"`

	// Specifies, when enabled, that the system uses the TCP flags CWR and ECE to notify its peer of congestion and congestion counter-measures. The default value is disabled.
	Ecn string `json:"ecn,omitempty"`

	// Specifies the time, in seconds, for which entries in the congestion metrics cache are valid. The default value is 0, which defers to the sys db variable route.metrics.timeout.
	CmetricsCacheTimeout int64 `json:"cmetricsCacheTimeout,omitempty"`

	// Specifies the size of the buffer, in bytes. The default value is 65535 bytes.
	SendBufferSize int64 `json:"sendBufferSize,omitempty"`

	// When enabled, significantly improves performance to Windows and MacOS peers who are writing out on a very small send buffer. The default value is enabled.
	AckOnPush string `json:"ackOnPush,omitempty"`

	// This option is DEPRECATED v12.0.0 onwards and is maintained here for backward compatibility reasons. When enabled, the debug output and statistics are available.
	MptcpDebug string `json:"mptcpDebug,omitempty"`

	// Specifies the number of milliseconds that a connection is in the TIME-WAIT state before closing. The default value is 2000 milliseconds. The range is from 0 to 600,000 (10 minutes).
	TimeWaitTimeout string `json:"timeWaitTimeout,omitempty"`

	// Specifies the timeout value to discard long-lived sessions that do not have an active flow. The default value is 3600 seconds. The range is from 60 to 36000 seconds.
	MptcpTimeout int64 `json:"mptcpTimeout,omitempty"`

	// Specifies, when enabled, that the system uses RFC2385 TCP-MD5 signatures to protect TCP traffic against intermediate tampering. The default value is disabled.
	Md5Signature string `json:"md5Signature,omitempty"`

	// Specifies the algorithm for fallback. The default value is reset.
	MptcpFallback string `json:"mptcpFallback,omitempty"`

	// Specifies, when enabled, that the system advertises an option, such as a time-stamp to the server only if it was negotiated with the client. The default value is disabled.
	ProxyOptions string `json:"proxyOptions,omitempty"`

	// Specifies the number of seconds that a connection remains in a LAST-ACK state before quitting. A value of 0 represents a term of forever (or until the maxrtx of the FIN state). The default value is 5 seconds.
	CloseWaitTimeout int64 `json:"closeWaitTimeout,omitempty"`

	// Specifies the highest level at which the receive window is closed. The default value is 16384.
	ProxyBufferHigh int64 `json:"proxyBufferHigh,omitempty"`

	// Displays the administrative partition within which this profile resides.
	Partition string `json:"partition,omitempty"`

	// Specifies the keep alive probe interval, in seconds. The default value is 1800 seconds.
	KeepAliveInterval int64 `json:"keepAliveInterval,omitempty"`

	// Specifies, when enabled, a plaintext passphrase which may be between 1 and 80 characters in length, and is used in a shared-secret scheme to implement the spoof-prevention parts of RFC2385. The default value is none.
	Md5SignaturePassphrase string `json:"md5SignaturePassphrase,omitempty"`

	// Specifies whether or not to use hardware SYN Cookie when cross system limit. The default is disabled.
	HardwareSynCookie string `json:"hardwareSynCookie,omitempty"`

	MaxSegmentSize int64 `json:"maxSegmentSize,omitempty"`

	// If enabled, checksums are supported by this MPTCP-enabled device.
	MptcpCsum string `json:"mptcpCsum,omitempty"`

	// Specifies, when enabled, that the system advertises the same mss to the server as was negotiated with the client. The default value is enabled.
	ProxyMss string `json:"proxyMss,omitempty"`

	SynCookieWhitelist string `json:"synCookieWhitelist,omitempty"`

	// When enabled, a SYN-ACK will be sent only if the server port is open. Not compatible with iRules. The default is disabled.
	VerifiedAccept string `json:"verifiedAccept,omitempty"`

	// If enabled, incoming checksums are verified, and checksum failure causes connection abort.
	MptcpCsumVerify string `json:"mptcpCsumVerify,omitempty"`

	// Specifies the maximum number of retransmissions of data segments that the system allows. The default value is 8.
	MaxRetrans int64 `json:"maxRetrans,omitempty"`
}
