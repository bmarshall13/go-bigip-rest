/* 
 * BigIP iControl REST
 *
 * REST API for F5 BigIP. Only LTM is included, and most endpoints are untested.
 *
 * OpenAPI spec version: 12.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package f5api

type ProfileClientSsl struct {

	// Specifies the peer certificate mode.
	PeerCertMode string `json:"peerCertMode,omitempty"`

	// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
	DefaultsFrom string `json:"defaultsFrom,omitempty"`

	// DEPRECATED - use cert-key-chain option instead. Specifies or builds a certificate chain file that a client can use to authenticate the profile. To use the default chain name, specify default.
	Chain string `json:"chain,omitempty"`

	// Specifies the authenticate depth. This is the client certificate chain maximum traversal depth.
	AuthenticateDepth int64 `json:"authenticateDepth,omitempty"`

	// Specifies the data group list of the destination IP whitelist for SSL Forward Proxy Bypass.
	DestinationIpWhitelist string `json:"destinationIpWhitelist,omitempty"`

	// Specifies the extensions of the web server certificates to be included in the generated certificates using SSL Forward Proxy. For example, { basic-constraints }. The default value is none.
	CertExtensionIncludes string `json:"certExtensionIncludes,omitempty"`

	// Specifies the alert timeout in seconds. You can also specify indefinite.
	AlertTimeout string `json:"alertTimeout,omitempty"`

	// Specifies the data group list of the hostname blacklist for SSL Forward Proxy Bypass.
	HostnameBlacklist string `json:"hostnameBlacklist,omitempty"`

	// Enables or disables session mirroring to the high-availability peer. The default option is disabled.
	SessionMirroring string `json:"sessionMirroring,omitempty"`

	// Use the specified CRL file even if it has expired.
	AllowExpiredCrl string `json:"allowExpiredCrl,omitempty"`

	// When true, this profile is the default SSL profile when a client connection does not specify a known server name, or does not specify any server name at all. The default value is false.
	SniDefault string `json:"sniDefault,omitempty"`

	// DEPRECATED - use cert-key-chain option instead. Specifies the key passphrase if required.
	Passphrase string `json:"passphrase,omitempty"`

	// Enables proxy SSL passthrough mode, which requires a corresponding server SSL profile with proxy-ssl-passthrough enabled to allow for modification of application data within an SSL tunnel.
	ProxySslPassthrough string `json:"proxySslPassthrough,omitempty"`

	// Specifies the SSL forward proxy bypass default action. The default value is intercept.
	ForwardProxyBypassDefaultAction string `json:"forwardProxyBypassDefaultAction,omitempty"`

	// Specifies the maximum number of renegotiation attempts allowed in a minute. The default value is 5.
	MaxRenegotiationsPerMinute int64 `json:"maxRenegotiationsPerMinute,omitempty"`

	// Specifies frequency of authentication. The default value is once.
	Authenticate string `json:"authenticate,omitempty"`

	// Specifies the data group list of the source IP whitelist for SSL Forward Proxy Bypass.
	SourceIpWhitelist string `json:"sourceIpWhitelist,omitempty"`

	// Specifies the profile mode, which enables or disables SSL processing. The default value is enabled.
	Mode string `json:"mode,omitempty"`

	// By default, the SSL profile performs unclean shutdowns of all SSL connections, which means that underlying TCP connections are closed without exchanging the required SSL shutdown alerts. If you want to force the SSL profile to perform a clean shutdown of all SSL connections, set this option to disabled.
	UncleanShutdown string `json:"uncleanShutdown,omitempty"`

	// Specifies whether SSL forward proxy lookup certificate by ipaddr/port feature is enabled or not. The default value is disabled.
	CertLookupByIpaddrPort string `json:"certLookupByIpaddrPort,omitempty"`

	// Specifies the data group list of the source IP blacklist for SSL Forward Proxy Bypass.
	SourceIpBlacklist string `json:"sourceIpBlacklist,omitempty"`

	// Specifies the data group list of the destination IP blacklist for SSL Forward Proxy Bypass.
	DestinationIpBlacklist string `json:"destinationIpBlacklist,omitempty"`

	// Name of entity
	Name string `json:"name,omitempty"`

	// Specifies the lifespan of the certificate generated using SSL Forward Proxy. The default value is 30 days.
	CertLifespan int64 `json:"certLifespan,omitempty"`

	// Controls mid-stream renegotiation. The default value is enabled.
	Renegotiation string `json:"renegotiation,omitempty"`

	// Specifies the SSL session cache size. For client-side profiles only, you can configure timeout and size values for the SSL session cache. Because each profile maintains a separate SSL session cache, you can configure the values on a per-profile basis.
	CacheSize int64 `json:"cacheSize,omitempty"`

	// Specifies the handshake timeout in seconds. You can also specify indefinite.
	HandshakeTimeout string `json:"handshakeTimeout,omitempty"`

	// Specifies the number of seconds that the system waits for ClientHello before sending Fatal Alert after sending Hello Request. The default is 10 seconds. You can set it to Indefinite which specifies that the system continue to wait for ClientHello for an unlimited time.
	PeerNoRenegotiateTimeout string `json:"peerNoRenegotiateTimeout,omitempty"`

	// Specifies the data group list of the hostname whitelist for SSL Forward Proxy Bypass.
	HostnameWhitelist string `json:"hostnameWhitelist,omitempty"`

	// Specifies the client cert certificate authority name.
	ClientCertCa string `json:"clientCertCa,omitempty"`

	// The application service to which the object belongs.
	AppService string `json:"appService,omitempty"`

	// Specifies a cipher name. The default value is DEFAULT, which uses the default ciphers.
	Ciphers string `json:"ciphers,omitempty"`

	// User defined description.
	Description string `json:"description,omitempty"`

	// Specifies whether SSL forward proxy feature is enabled or not. The default value is disabled.
	SslForwardProxy string `json:"sslForwardProxy,omitempty"`

	// Specifies the SSL session cache timeout value. This specifies the number of usable lifetime seconds of negotiated SSL session IDs. The default timeout value for the SSL session cache is 3600 seconds. Acceptable values are integers greater than or equal to 0 and less than or equal to 86400.
	CacheTimeout int64 `json:"cacheTimeout,omitempty"`

	// SSL sign hash algorithm to sign and verify SSL Server Key Exchange and Certificate Verify messages for the specified SSL profiles.
	SslSignHash string `json:"sslSignHash,omitempty"`

	// Enables or disables generic-alert which if use generic alert number in Alert message. The default option is enabled.
	GenericAlert string `json:"genericAlert,omitempty"`

	// Specifies the session ticket timeout. The default value is 0.
	SessionTicketTimeout int64 `json:"sessionTicketTimeout,omitempty"`

	// Enables or disables strict-resume. The default option is disabled, which causes the SSL profile to allow uncleanly shut down SSL sessions to be resumed. Conversely, you can specify enabled to prevent an SSL session from being resumed after an unclean shutdown.
	StrictResume string `json:"strictResume,omitempty"`

	// When true, SNI support is required for the peer and if a client connection does not specify a known server name, or does not specify any server name at all, the handshake will fail. The default value is false.
	SniRequire string `json:"sniRequire,omitempty"`

	// Specifies the size of the application data, in megabytes, that is transmitted over the secure channel above which the traffic management system must renegotiate the SSL session. The default value is indefinite.
	RenegotiateSize string `json:"renegotiateSize,omitempty"`

	// DEPRECATED - use cert-key-chain option instead. Specifies the name of a key file that you generated and installed on the system. The default key name is default.key.
	Key string `json:"key,omitempty"`

	// Specifies the Certification Authority key for SSL Forward Proxy.
	ProxyCaKey string `json:"proxyCaKey,omitempty"`

	// Controls secure renegotiation. The default value is require.
	SecureRenegotiation string `json:"secureRenegotiation,omitempty"`

	// Specifies the maximum number of aggregate renegotiation attempts allowed in a minute. The default value is 0.
	MaxAggregateRenegotiationPerMinute string `json:"maxAggregateRenegotiationPerMinute,omitempty"`

	// Specifies the maximum number of SSL records that the traffic management system can receive before it renegotiates an SSL session. After the system receives this number of SSL records, it closes the connection. This setting applies to client-side profiles only. The default value is 10.
	RenegotiateMaxRecordDelay string `json:"renegotiateMaxRecordDelay,omitempty"`

	// Enables or disables session-ticket. The default option is disabled, see RFC5077.
	SessionTicket string `json:"sessionTicket,omitempty"`

	// Kind of entity
	Kind string `json:"kind,omitempty"`

	// Enables options, including some industry-related workarounds. Enter options inside braces, for example, { dont-insert-empty-fragments microsoft-sess-id-bug}. The default value is all-bugfixes, which enables a set of industry-related miscellaneous workarounds related to SSL processing.
	TmOptions string `json:"tmOptions,omitempty"`

	// Specifies the Certification Authority cert for SSL Forward Proxy.
	ProxyCaCert string `json:"proxyCaCert,omitempty"`

	// Enables or disables ModSSL method emulation. Enable this option when OpenSSL methods are inadequate. For example, you can enable this option when you want to use SSL compression over TLSv1.
	ModSslMethods string `json:"modSslMethods,omitempty"`

	// Enables proxy SSL mode, which requires a corresponding server SSL profile with proxy-ssl enabled to allow for modification of application data within an SSL tunnel.
	ProxySsl string `json:"proxySsl,omitempty"`

	// Displays the administrative partition within which this profile resides.
	Partition string `json:"partition,omitempty"`

	// Specifies the certificate revocation list file name.
	CrlFile string `json:"crlFile,omitempty"`

	// DEPRECATED - use cert-key-chain option instead. Specifies the name of the certificate installed on the traffic management system for the purpose of terminating or initiating an SSL connection.
	Cert string `json:"cert,omitempty"`

	// Specifies the number of seconds required to renegotiate an SSL session. The default value is indefinite.
	RenegotiatePeriod string `json:"renegotiatePeriod,omitempty"`

	// Specifies the passphrase of the Certification Authority key for SSL Forward Proxy.
	ProxyCaPassphrase string `json:"proxyCaPassphrase,omitempty"`

	// Enables or disables non-SSL connections. Specify enabled to allow non-SSL connections to pass through the traffic management system as clear text.
	AllowNonSsl string `json:"allowNonSsl,omitempty"`

	InheritCertkeychain string `json:"inheritCertkeychain,omitempty"`

	// When true, client certificate is retained in SSL session.
	RetainCertificate string `json:"retainCertificate,omitempty"`

	// Specifies whether SSL forward proxy bypass feature is enabled or not. The default value is disabled.
	SslForwardProxyBypass string `json:"sslForwardProxyBypass,omitempty"`

	// Specifies the certificate authority (CA) file name. Configure certificate verification by specifying a list of client or server CAs that the traffic management system trusts.
	CaFile string `json:"caFile,omitempty"`

	// Name matched to TLS/1.1 and above client SSL requests that support the Server Name Indication extension. The default value is empty, which disables support for this extension.
	ServerName string `json:"serverName,omitempty"`
}
