/* 
 * BigIP iControl REST
 *
 * REST API for F5 BigIP. Only LTM is included, and most endpoints are untested.
 *
 * OpenAPI spec version: 12.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package f5api

type MonitorHttps struct {

	// Specifies the user name if the monitored target requires authentication.
	Username string `json:"username,omitempty"`

	// The application service to which the object belongs.
	AppService string `json:"appService,omitempty"`

	// Specifies the size of the sliding window, in seconds, which records probe history.  For example, if this value is 300, then a sliding window of the last five minutes' probe history will be used for calculating probe mean latency.
	AdaptiveSamplingTimespan int64 `json:"adaptiveSamplingTimespan,omitempty"`

	// Specifies the IP address and service port of the resource that is the destination of this monitor. Possible values are:  *:* (Specifies to perform a health check on the IP address and port supplied by a pool member), *:port (Specifies to perform a health check on the server with the IP address supplied by the pool member and the port you specify.),   IP : port  (Specifies to mark a pool member up or down based on the response of the server at the IP address and port you specify.),   IP : port   with the transparent option enabled (Specifies to perform a health check on the server at the IP address and port specified in the monitor, routing the check through the IP address and port supplied by the pool member.  The pool member (the gateway) is marked up or down accordingly.).
	Destination string `json:"destination,omitempty"`

	// User defined description.
	Description string `json:"description,omitempty"`

	// Specifies how often in seconds that the system issues the monitor check when the node is up. The default value is the same as the (down) interval.
	UpInterval int64 `json:"upInterval,omitempty"`

	// Specifies the list of ciphers for this monitor. The default list DEFAULT:+SHA:+3DES:+kEDH is located in the file base_monitors.conf.
	Cipherlist string `json:"cipherlist,omitempty"`

	// Specifies whether the system automatically changes the status of a resource to enabled at the next successful monitor check. The default value is disabled. If you set this option to enabled, you must manually re-enable the resource before the system can use it for load balancing connections.
	ManualResume string `json:"manualResume,omitempty"`

	// Specifies how far from mean latency each monitor probe is allowed to be.  If adaptive-divergence-type is relative, this value is a percentage deviation from mean (e.g. 50 would indicate the probe is allowed to exceed the mean latency by 50%.)  If adaptive-divergence-type is absolute, this value is an offset from mean in milliseconds (e.g. 250 would indicate the probe is allowed allowed to exceed the mean latency by 250 ms.)
	AdaptiveDivergenceValue int64 `json:"adaptiveDivergenceValue,omitempty"`

	// Specifies the differentiated services code point (DSCP). DSCP is a 6-bit value in the Differentiated Services (DS) field of the IP header. It can be used to specify the quality of service desired for the packet. The valid range for this value is 0 to 63 (hex 0x0 to 0x3f). The default value is zero.
	IpDscp int64 `json:"ipDscp,omitempty"`

	// Specifies the frequency at which the system issues the monitor check. The default value is 5 seconds.
	Interval int64 `json:"interval,omitempty"`

	// Specifies the existing monitor from which the system imports settings for the new monitor.
	DefaultsFrom string `json:"defaultsFrom,omitempty"`

	// Specifies the hard limit, in milliseconds, which the probe is not allowed to exceed, regardless of the divergence value.  For example, if this value is 500, then the probe latency may not exceed 500 ms even if that would still fall within the divergence value.
	AdaptiveLimit int64 `json:"adaptiveLimit,omitempty"`

	// Specifies the password if the monitored target requires authentication.
	Password string `json:"password,omitempty"`

	// Specifies the text string that the monitor looks for in the returned resource. The most common receive expressions contain a text string that is included in an HTML file on your site. The text string can be regular text, HTML tags, or image names. If you do not specify both a Send String and a Receive String, the monitor performs a simple service check and connect only.
	Recv string `json:"recv,omitempty"`

	// Specifies whether the monitor operates in transparent mode. Monitors in transparent mode can monitor pool members through firewalls. The default value is disabled.
	Transparent string `json:"transparent,omitempty"`

	// Name of entity
	Name string `json:"name,omitempty"`

	// Kind of entity
	Kind string `json:"kind,omitempty"`

	// Specifies whether the monitor operates in reverse mode. When the monitor is in reverse mode, a successful check marks the monitored object down instead of up. You can use the Reverse mode only if you configure both the options send and recv.  The default value is no. The no option specifies that the monitor does not operate in reverse mode. The yes option specifies that the monitor operates in reverse mode.
	Reverse string `json:"reverse,omitempty"`

	// Specifies the RSA private key if the monitored target requires authentication. The key must be surrounded by quotation marks, for example, key \"client.key\". Note that if you specify a key, you must also specify a value for the cert option.
	Key string `json:"key,omitempty"`

	// Specifies whether the adaptive-divergence-value is relative or absolute.
	AdaptiveDivergenceType string `json:"adaptiveDivergenceType,omitempty"`

	// Displays the administrative partition within which the monitor resides.
	Partition string `json:"partition,omitempty"`

	// Specifies the text string that the monitor sends to the target object. The default setting is GET /, which retrieves a default HTML file for a web site. To retrieve a specific page from a web site, specify a fully-qualified path name, for example, GET /www/company/index.html. Since the string may have special characters, the system may require that the string be enclosed with single quotation marks. If this value is null, then a valid connection suffices to determine that the service is up. In this case, the system does not need the recv, recv-row, and recv-column options and ignores the options even if not null.
	Send string `json:"send,omitempty"`

	// Specifies, when enabled, that the SSL options setting (in OpenSSL) is set to ALL. The default value is enabled.
	Compatibility string `json:"compatibility,omitempty"`

	// Specifies the amount of time in seconds after the first successful response before a node will be marked up.  A value of 0 will cause a node to be marked up immediately after a valid  response is received from the node. The default setting is 0.
	TimeUntilUp int64 `json:"timeUntilUp,omitempty"`

	// Specifies a file object for a client certificate that the monitor sends to the target SSL server.
	Cert string `json:"cert,omitempty"`

	// Specifies the number of seconds the target has in which to respond to the monitor request. The default value is 16 seconds. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. Also, if the target responds with a RESET packet, the system immediately flags the target as down without waiting for the timeout interval to expire.
	Timeout int64 `json:"timeout,omitempty"`

	// Specifies a text string that the monitor looks for in the returned resource. If the text string matches a string in the returned resource, the corresponding pool member or node is marked session disabled.
	RecvDisable string `json:"recvDisable,omitempty"`

	// Specifies whether the adaptive feature is enabled for this monitor.  Not all monitors support the adaptive feature.
	Adaptive string `json:"adaptive,omitempty"`
}
